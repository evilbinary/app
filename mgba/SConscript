# coding:utf-8
# *******************************************************************
# * Copyright 2021-2080 evilbinary
# * 作者: evilbinary on 01/01/20
# * 邮箱: rootdebug@163.com
# ********************************************************************
import os

Import('env')


cflags = ' -DUSE_FILE32API '


source = []

source += [
    'src/platform/sdl/main.c',
    'src/platform/sdl/sw-sdl2.c',
    'src/platform/sdl/sdl-events.c',
    'src/platform/sdl/sdl-audio.c',

    'src/version.c',

]

source += Glob('src/arm/*.c')
source += Glob('src/arm/*/*.c')
source += Glob('src/core/*.c')
source += Glob('src/debugger/*.c')
# source+=Glob('src/feature/*.c')

# source+=Glob('src/feature/gui/*.c')
source += Glob('src/feature/video-logger.c')
source += Glob('src/feature/commandline.c')

source += Glob('src/gb/*.c')
source += Glob('src/gb/*/*.c')
source += Glob('src/gba/*.c')
source += Glob('src/gba/*/*.c')
source += Glob('src/sm83/*.c')
source += Glob('src/sm83/debugger/*.c')

# source+=Glob('src/util/gui/*.c')

source += Glob('src/util/vfs/*.c')
source += Glob('src/util/*.c')

source += Glob('src/libgba/*.c')


source += [
    'src/third-party/zlib/contrib/minizip/ioapi.c',
    'src/third-party/zlib/contrib/minizip/unzip.c',
    'src/third-party/zlib/contrib/minizip/zip.c',

    # 'src/third-party/zlib/contrib/minizip/miniunz.c',
    # 'src/third-party/zlib/contrib/minizip/minizip.c',
]

source += Glob('src/third-party/inih/*.c')

source += Glob('src/third-party/blip_buf/*.c')

libs = [
    'libsdl2.a',
    'libgui.a',
    'libimage.a',
    'libjpeg.a',
    'libpng.a',
    'libzlib.a',
]

include = [
    '../../eggs/libsdl2-image/',
    '../../eggs/libsdl2-ttf/',
    '../../eggs/libjpeg/',
    '../../eggs/libfreetype/include',
    '../../eggs/ibzlib',

    'include/mgba-util',
    'src/third-party/zlib/contrib/',
    'src/third-party/zlib/contrib/minizip/',
    'src',
    'include',
    '.',
    'sys/sdl2/',
    'src/libgba',

]

libpath = [
    '../../eggs/libsdl2/',
    '../../eggs/libsdl2-image/',
    '../../eggs/libsdl2-ttf/',
    '../../eggs/libfreetype',

    '../../eggs/libwebp/',

]


env.Program('mgba', source,
            LIBS=libs+env.get('LIBS'),
            LIBPATH=env.get('LIBPATH')+libpath,
            CPPPATH=env.get('CPPPATH')+include,
            CFLAGS='$CFLAGS '+cflags,
            )

# build miniunz

source = [
    'src/third-party/zlib/contrib/minizip/ioapi.c',
    'src/third-party/zlib/contrib/minizip/unzip.c',
    'src/third-party/zlib/contrib/minizip/zip.c',
    'src/third-party/zlib/contrib/minizip/miniunz.c',
    # 'src/third-party/zlib/contrib/minizip/minizip.c',
]


env.Program('miniunz', source,
            LIBS=libs+env.get('LIBS'),
            LIBPATH=env.get('LIBPATH')+libpath,
            CPPPATH=env.get('CPPPATH')+include,
            CFLAGS='$CFLAGS '+cflags,
            )
