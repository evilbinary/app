# coding:utf-8
# *******************************************************************
# * Copyright 2021-2080 evilbinary
# * 作者: evilbinary on 01/01/20
# * 邮箱: rootdebug@163.com
# ********************************************************************
import os

Import('env')


env = env.Clone(
    w=GetOption('w'),
    ENV=os.environ,
    PATH=[os.environ['PATH'], '/opt/local/bin'],
)

source = [
    'test.c',
]

libs = [
    'libcmocka.a',
]+env['LIBC']


env.Program('test', source,
            LIBS=libs+env.get('LIBS'),
            CFLAGS='$CFLAGS $LIBCFLAGS',
            )

if env.get('DEFAULT_LIBC') == 'libmusl':
    source = [
        'test-musl.c',
    ]
    env.Program('test-musl', source,
                LIBS=libs+env.get('LIBS'),
                CFLAGS='$CFLAGS $LIBCFLAGS',
                )


source = [
    'test-file.c',
]

env.Program('test-file', source,
            LIBS=libs+env.get('LIBS'),
            )


source = [
    'test-mem.c',
]


env.Program('test-mem', source,
            LIBS=libs+env.get('LIBS')
            )


source = [
    'test-uncompress.c',
]


cflags = ''

env.Program('test-uncompress', source,
            LIBS=libs+env.get('LIBS')+[
                'libzlib.a',
                'liblz4.a',
                'libuuid.a',
                'libcmocka.a',
            ],
            CFLAGS='$CFLAGS $LIBCFLAGS',
            )


source = [
    'test-string.c',
]

env.Program('test-string', source,
            LIBS=libs+env.get('LIBS'),
            )


source = [
    'test-stdlib.c',
]


env.Program('test-stdlib', source,
            LIBS=libs+env.get('LIBS'))


source = [
    'test-stdio.c',
]

env.Program('test-stdio', source,
            LIBS=libs+env.get('LIBS')
            )


source = [
    'test-fork.c',
]

env.Program('test-fork', source,
            LIBS=libs+env.get('LIBS')
            )


source = [
    'test-free.c',
]

env.Program('test-free', source,
            LIBS=libs+env.get('LIBS')
            )


source = [
    'test-sound.c',
]

env.Program('test-sound', source,
            LIBS=libs+env.get('LIBS')
            )
