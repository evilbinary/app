# coding:utf-8
# *******************************************************************
# * Copyright 2021-2080 evilbinary
# * 作者: evilbinary on 01/01/20
# * 邮箱: rootdebug@163.com
# ********************************************************************
import os

Import('cliEnv')
Import('cppEnv')


env = cliEnv.Clone()

env.UseLibrary(['cmocka'])



env.AddCflags([
    '-DHAVE_SIGNAL_H'
])

env.Program('test', [
    'test.c']
)

if env.get('DEFAULT_LIBC') == 'libmusl':
    env.Program('test-musl', [
        'test-musl.c',
    ])


env.Program('test-file', [
    'test-file.c',
])

env.Program('test-mem', [
    'test-mem.c',
])

env = cliEnv.Clone()
env.UseLibrary(['zlib', 'lz4', 'uuid', 'cmocka'])

env.Program('test-uncompress', [
    'test-uncompress.c',
])

env.Program('test-string',  [
    'test-string.c',
])


env.Program('test-stdlib', [
    'test-stdlib.c',
])

env.Program('test-stdio', [
    'test-stdio.c',
])


env.Program('test-fork', [
    'test-fork.c',
])


env.Program('test-free', [
    'test-free.c',
])


env.Program('test-sound', [
    'test-sound.c',
])


env.Program('test-sys', [
    'test-sys.c',
])


env.Program('test-thread', [
    'test-thread.c',
])


# env.SharedLibrary('test-so',  [
#     'test-so.c',
# ],
#     SHLIBSUFFIX='.so',
# )


# env.Program('test-call-so', [
#     'test-call-so.c',
# ])


# env.Program('test-call-so', [
#     'test-dl.c',
# ])


# env.SharedLibrary('ld-musl-arm', source,
#             SHLIBPREFIX = '',
#             SHLIBSUFFIX = '.so.1',
#             CPPPATH=include+env.get('CPPPATH'),
#             LIBPATH=libpath+env['LIBPATH'],
#            ,
#             CFLAGS=cflags+' $CFLAGS $LIBCFLAGS ',
#             )