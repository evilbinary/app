# coding:utf-8
# *******************************************************************
# * Copyright 2021-2080 evilbinary
# * 作者: evilbinary on 01/01/20
# * 邮箱: rootdebug@163.com
# ********************************************************************
import os

Import('env')


env = env.Clone(
    w=GetOption('w'),
    ENV=os.environ,
    PATH=[os.environ['PATH'], '/opt/local/bin'],
)

source = [
    'test.c',
    '../libcmocka/libcmocka.a'
]+env['LIBC']

if env.get('MYLIB'):
    source.append(env.get('MYLIB'))

env.Program('test', source,
            CFLAGS='$CFLAGS $LIBCFLAGS -Iapp/libcmocka/include',
            LINKFLAGS='$LINKFLAGS $USER')

if env.get('DEFAULT_LIBC') == 'libmusl':
    source = [
        'test-musl.c',
        '../libcmocka/libcmocka.a',
    ]+env['LIBC']
    if env.get('MYLIB'):
        source.append(env.get('MYLIB'))

    env.Program('test-musl', source,
                CFLAGS='$CFLAGS $LIBCFLAGS -Iapp/libcmocka/include',
                LINKFLAGS='$LINKFLAGS $USER')


source = [
    'test-file.c',

    '../libcmocka/libcmocka.a',
]+env['LIBC']

if env.get('MYLIB'):
    source.append(env.get('MYLIB'))


env.Program('test-file', source,
            CFLAGS='$CFLAGS $LIBCFLAGS -Iapp/libcmocka/include',
            LINKFLAGS='$LINKFLAGS $USER')


source = [
    'test-mem.c',

    '../libcmocka/libcmocka.a',
]+env['LIBC']

if env.get('MYLIB'):
    source.append(env.get('MYLIB'))


env.Program('test-mem', source,
            CFLAGS='$CFLAGS $LIBCFLAGS -Iapp/libcmocka/include',
            LINKFLAGS='$LINKFLAGS $USER')



source = [
    'test-uncompress.c',
    '../libzlib/libzlib.a',
    '../liblz4/liblz4.a',
    '../libuuid/libuuid.a',
    '../libcmocka/libcmocka.a',
]+env['LIBC']

if env.get('MYLIB'):
    source.append(env.get('MYLIB'))


cflags=''

env.Program('test-uncompress', source,
            CFLAGS='$CFLAGS $LIBCFLAGS -Iapp/libcmocka/include -Iapp/libzlib/',
            LINKFLAGS='$LINKFLAGS $USER')


source = [
    'test-string.c',
    '../libcmocka/libcmocka.a',
]+env['LIBC']

if env.get('MYLIB'):
    source.append(env.get('MYLIB'))


cflags=''

env.Program('test-string', source,
            CFLAGS='$CFLAGS $LIBCFLAGS -Iapp/libcmocka/include ',
            LINKFLAGS='$LINKFLAGS $USER')