# coding:utf-8
# *******************************************************************
# * Copyright 2021-2080 evilbinary
# * 作者: evilbinary on 01/01/20
# * 邮箱: rootdebug@163.com
# ********************************************************************
import os

Import('appEnv')
env = appEnv.Clone()
ffmepgEnv = appEnv.Clone()

source = [
    'main.c',

]

libs = [
    'libsdl2.a',
    'libgui.a',
    'libimage.a',
    'libjpeg.a',
    'libpng.a',
    'libzlib.a',
]

include = [
    '../../eggs/libsdl2/include',
    '../../eggs/libsdl2/src',
    '../../eggs/libsdl2/',
]


libpath = [
    '../../eggs/libsdl2/',
]

cflags = ' -DHAVE_CBRT -DHAVE_ERF -DHAVE_HYPOT -DHAVE_TRUNC -DHAVE_RINT'

if env.get('DEFAULT_LIBC') == 'libmusl':
    cflags = '-lstdatomic  -DHAVE_CBRT -DHAVE_ERF -DHAVE_HYPOT -DHAVE_TRUNC -DHAVE_RINT -DHAVE_TRUNCF -DHAVE_ROUNDF -DHAVE_ROUND  -DHAVE_LRINT -DHAVE_LRINTF -DHAVE_CBRTF -DHAVE_COPYSIGN'


env.Program('sdl2', source,
            LIBS=libs+env.get('LIBS'),
            LIBPATH=env.get('LIBPATH')+libpath,
            CPPPATH=env.get('CPPPATH')+include,
            CFLAGS=cflags+' $CFLAGS $LIBCFLAGS ',
            )





ffmepgEnv.UseLibrary([
    'sdl2',
    'gui',
    'libffmpeg/avdevice',
    'libffmpeg/avfilter',
    'libffmpeg/avformat',
    'libffmpeg/swscale',
    'libffmpeg/avcodec',
    'libffmpeg/swresample',
    'libffmpeg/avutil'
])

ffmepgEnv.AddInclude([
    '#eggs/libffmpeg',
    '#eggs/libsdl2',
    '#eggs/libsdl2/include',
    '#eggs/libffmpeg/libavdevice/',
    '#eggs/libffmpeg/libavfilter/',
    '#eggs/libffmpeg/libavformat/',
    '#eggs/libffmpeg/libswscale/',
    '#eggs/libffmpeg/libavcodec/',
    '#eggs/libffmpeg/libavutil/',
    '#eggs/libffmpeg/libswresample/',
])

ffmepgEnv.Program('player', [
    'player.c',
])


# showimage

source = [
    'showimage.c',


]
libs = [

    'libsdl2.a',
    'libsdl2-image.a',
    'libgui.a',
    'libjpeg.a',
    'libpng.a',
    'libzlib.a',
    'libwebp.a',
]
include = [
    '../../eggs/libsdl2-image/',
    '../../eggs/libsdl2/include',
    '../../eggs/libsdl2/src',
    '../../eggs/libsdl2/',
]

libpath = [
    '../../eggs/libsdl2/',
    '../../eggs/libsdl2-image/',
    '../../eggs/libwebp/',
]

env.Program('showimage', source,
            LIBS=libs+env.get('LIBS'),
            LIBPATH=env.get('LIBPATH')+libpath,
            CPPPATH=env.get('CPPPATH')+include,
            )


# showfont

source = [
    'showfont.c',
]

libs = [
    'libsdl2.a',
    'libsdl2-image.a',
    'libsdl2-ttf.a',
    'libfreetype.a',
    'libgui.a',
    'libjpeg.a',
    'libpng.a',
    'libzlib.a',
    'libwebp.a',
]

include = [
    '../../eggs/libsdl2-image/',
    '../../eggs/libsdl2-ttf/',
    '../../eggs/libfreetype/include',
  '../../eggs/libsdl2/include',
]

libpath = [
    '../../eggs/libsdl2/',
    '../../eggs/libsdl2-image/',
    '../../eggs/libsdl2-ttf/',
    '../../eggs/libfreetype',

    '../../eggs/libwebp/',
]

env.Program('showfont', source,
            LIBS=libs+env.get('LIBS'),
            LIBPATH=env.get('LIBPATH')+libpath,
            CPPPATH=env.get('CPPPATH')+include
            )
